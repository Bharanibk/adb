trigger:
  branches:
    include:
      - main

pool:
  vmImage: ubuntu-latest

variables:
- group: databricks-stage   # uses your variable group with: databricks-host, databricks-token

stages:
# 1) Validate the bundle for Stage
- stage: Validate
  displayName: Validate Bundle (Stage)
  jobs:
  - job: validate
    steps:
    - checkout: self
      fetchDepth: 0

    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.10'

    - script: |
        python -m pip install --upgrade pip
        pip install --upgrade databricks-cli databricks-sdk
      displayName: Install Databricks CLI

    - script: |
        cd jobs
        export DATABRICKS_HOST="$(databricks-host)"
        export DATABRICKS_TOKEN="$(databricks-token)"
        databricks bundle validate -t stage
      displayName: Validate databricks bundle (-t stage)

# 2) Deploy to Stage
- stage: Deploy_Stage
  displayName: Deploy to Staging
  dependsOn: Validate
  condition: succeeded()
  jobs:
  - deployment: deploy_stage
    displayName: Deploy notebooks + job (Stage)
    environment: staging   # optional: add approvals in DevOps â†’ Environments
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: self
            fetchDepth: 0

          - task: UsePythonVersion@0
            inputs:
              versionSpec: '3.10'

          - script: |
              python -m pip install --upgrade pip
              pip install --upgrade databricks-cli databricks-sdk
            displayName: Install Databricks CLI

          - script: |
              cd jobs
              export DATABRICKS_HOST="$(databricks-host)"
              export DATABRICKS_TOKEN="$(databricks-token)"
              databricks bundle deploy -t stage
            displayName: Deploy bundle (-t stage)

          # Optional: kick off a test run after deploy
          - script: |
              cd jobs
              export DATABRICKS_HOST="$(databricks-host)"
              export DATABRICKS_TOKEN="$(databricks-token)"
              databricks bundle run csv_pipeline_job -t stage --refresh-all
            displayName: Run job once (-t stage)
