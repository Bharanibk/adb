# azure-pipelines.yml
trigger:
  branches:
    include:
      - main
      - develop

parameters:
  - name: environment
    displayName: 'Target Environment'
    type: string
    default: 'dev'
    values:
      - dev
      - staging
      - prod

variables:
  # Set Databricks host based on environment
  ${{ if eq(parameters.environment, 'dev') }}:
    databricks_host: 'https://adb-1804483085509645.5.azuredatabricks.net'
  ${{ if eq(parameters.environment, 'staging') }}:
    databricks_host: 'https://adb-1804483085509645.5.azuredatabricks.net'
  ${{ if eq(parameters.environment, 'prod') }}:
    databricks_host: 'https://adb-PROD-INSTANCE-ID.azuredatabricks.net'

stages:
  - stage: Validate
    displayName: 'Validate Bundle'
    jobs:
      - job: ValidateJob
        displayName: 'Validate Databricks Bundle'
        pool:
          vmImage: 'ubuntu-latest'
        
        steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: '3.9'
          
          - script: |
              curl -fsSL https://raw.githubusercontent.com/databricks/setup-cli/main/install.sh | sh
            displayName: 'Install Databricks CLI'
          
          - script: |
              databricks bundle validate -t ${{ parameters.environment }}
            displayName: 'Validate Bundle Configuration'
            env:
              DATABRICKS_HOST: $(databricks_host)
              DATABRICKS_TOKEN: $(DATABRICKS_TOKEN)

  - stage: Deploy
    displayName: 'Deploy to ${{ parameters.environment }}'
    dependsOn: Validate
    condition: succeeded()
    jobs:
      - deployment: DeployJob
        displayName: 'Deploy Databricks Assets'
        pool:
          vmImage: 'ubuntu-latest'
        environment: ${{ parameters.environment }}
        
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self
                
                - task: UsePythonVersion@0
                  inputs:
                    versionSpec: '3.9'
                
                - script: |
                    curl -fsSL https://raw.githubusercontent.com/databricks/setup-cli/main/install.sh | sh
                  displayName: 'Install Databricks CLI'
                
                - script: |
                    databricks bundle deploy -t ${{ parameters.environment }}
                  displayName: 'Deploy Bundle'
                  env:
                    DATABRICKS_HOST: $(databricks_host)
                    DATABRICKS_TOKEN: $(DATABRICKS_TOKEN)
                
                - script: |
                    # Optionally run the job after deployment
                    JOB_ID=$(databricks bundle run employee_master_job -t ${{ parameters.environment }} --output json | jq -r .run_id)
                    echo "Job started with run ID: $JOB_ID"
                  displayName: 'Trigger Job (Optional)'
                  condition: eq('${{ parameters.environment }}', 'dev')
                  env:
                    DATABRICKS_HOST: $(databricks_host)
                    DATABRICKS_TOKEN: $(DATABRICKS_TOKEN)